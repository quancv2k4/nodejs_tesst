name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  
jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Check for package files
        run: |
          if [ ! -f package.json ]; then
            echo "‚ö†Ô∏è No package.json found"
            exit 0
          fi
      
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ] || [ -f yarn.lock ]; then
            npm ci
          else
            echo "‚ö†Ô∏è No lockfile found, using npm install"
            npm install
          fi
        continue-on-error: true
      
      - name: Build (if needed)
        run: |
          npm run build || echo "No build script"
        continue-on-error: true
      
      - name: Run tests
        run: |
          npm test || echo "No tests configured"
        continue-on-error: true

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/quancv2k4/nodejs_tesst:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Checkout Repository B (for manifests)
        uses: actions/checkout@v3
        with:
          repository: quanmbl4255142/repository_b_ci_cd_fpt_repob_devops
          token: ${{ secrets.GITHUB_TOKEN }}
          path: repo-b
          fetch-depth: 0
      
      - name: Update deployment image
        working-directory: repo-b
        env:
          SHA: ${{ github.sha }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          # Use service name from context
          SERVICE_NAME="nodejs-test-02"
          
          # Method 1: Try to use SERVICE_NAME if provided
          if [ -n "$SERVICE_NAME" ] && [ "$SERVICE_NAME" != "None" ] && [ "$SERVICE_NAME" != "" ]; then
            APP_FOLDER="apps/$SERVICE_NAME"
            if [ -d "$APP_FOLDER" ]; then
              echo "‚úÖ Using service_name: $APP_FOLDER"
              find "$APP_FOLDER" -name "deployment.yaml" -exec sed -i "s|image: ghcr.io/quancv2k4/nodejs_tesst:.*|image: ghcr.io/quancv2k4/nodejs_tesst:${SHA}|g" {} \;
            else
              echo "‚ö†Ô∏è Service folder not found: $APP_FOLDER"
              # Fallback to method 2
              APP_FOLDER=$(find apps/ -type d -maxdepth 1 -name "*$nodejs-test-02*" | head -n 1)
              if [ -n "$APP_FOLDER" ]; then
                echo "‚úÖ Found similar service folder: $APP_FOLDER"
                find "$APP_FOLDER" -name "deployment.yaml" -exec sed -i "s|image: ghcr.io/quancv2k4/nodejs_tesst:.*|image: ghcr.io/quancv2k4/nodejs_tesst:${SHA}|g" {} \;
              fi
            fi
          fi
          
          # Method 2: Find by repo name (fallback or primary if no service_name)
          if [ -z "$APP_FOLDER" ] || [ ! -d "$APP_FOLDER" ]; then
            echo "üîç Searching by repo name: ${REPO_NAME}"
            APP_FOLDER=$(find apps/ -type d -maxdepth 1 -name "*${REPO_NAME}*" | head -n 1)
            
            if [ -z "$APP_FOLDER" ]; then
              echo "‚ö†Ô∏è Exact match not found, updating all deployment.yaml files"
              find apps/ -name "deployment.yaml" -exec sed -i "s|image: ghcr.io/quancv2k4/nodejs_tesst:.*|image: ghcr.io/quancv2k4/nodejs_tesst:${SHA}|g" {} \;
            else
              echo "‚úÖ Found app folder: $APP_FOLDER"
              find "$APP_FOLDER" -name "deployment.yaml" -exec sed -i "s|image: ghcr.io/quancv2k4/nodejs_tesst:.*|image: ghcr.io/quancv2k4/nodejs_tesst:${SHA}|g" {} \;
            fi
          fi
          
          echo "‚úÖ Updated deployment.yaml with new image tag"
          find apps/ -name "deployment.yaml" -exec grep "image:" {} \; || echo "No deployment.yaml found"
      
      - name: Commit and push to Repository B
        working-directory: repo-b
        env:
          SHA: ${{ github.sha }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --cached
          git commit -m "[skip ci] Update image to ${SHA}" || echo "No changes to commit"
          git push origin main || echo "Push failed or no changes"
